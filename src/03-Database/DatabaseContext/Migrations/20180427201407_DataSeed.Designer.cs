// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Internal;
using Microsoft.EntityFrameworkCore.Migrations;
using ViridianCode.ViridianSurvey.DatabaseContext;

namespace ViridianCode.ViridianSurvey.DatabaseContext.Migrations
{
    [DbContext(typeof(ViridianSurveyContext))]
    [Migration("20180427201407_DataSeed")]
    partial class DataSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-preview2-30571")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ViridianCode.ViridianSurvey.DataModel.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<int>("CreatedById");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("Mandatory");

                    b.Property<int>("Order");

                    b.Property<int?>("ParentQuestionId");

                    b.Property<string>("QuestionText");

                    b.Property<string>("Relevance");

                    b.Property<int>("Scale");

                    b.Property<int?>("SurveyId");

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ParentQuestionId");

                    b.HasIndex("SurveyId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("ViridianCode.ViridianSurvey.DataModel.Respondent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CreatedById");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("Respondents");
                });

            modelBuilder.Entity("ViridianCode.ViridianSurvey.DataModel.Survey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("AllowBackwardNavigation");

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<int>("CreatedById");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("EndMessage");

                    b.Property<bool>("ShowGroupDescription");

                    b.Property<bool>("ShowGroupName");

                    b.Property<bool>("ShowProgressBar");

                    b.Property<bool>("ShowWelcomeScreen");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<string>("WelcomeMessage");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("Surveys");

                    b.HasData(
                        new { Id = 1, AllowBackwardNavigation = false, Code = "S001", CreatedById = 1, CreatedDate = new DateTime(2018, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified), Description = "descriptionik", EndMessage = "end mesedzyk", ShowGroupDescription = false, ShowGroupName = false, ShowProgressBar = false, ShowWelcomeScreen = false, Title = "titelek", WelcomeMessage = "welcome mesedzyk" }
                    );
                });

            modelBuilder.Entity("ViridianCode.ViridianSurvey.DataModel.UserAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsActive");

                    b.Property<string>("LastName");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("UserAccounts");

                    b.HasData(
                        new { Id = 1, CreatedDate = new DateTime(2018, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified), Email = "janusz@testow.com", FirstName = "Janusz", IsActive = true, LastName = "Testów", UserName = "admin" }
                    );
                });

            modelBuilder.Entity("ViridianCode.ViridianSurvey.DataModel.Question", b =>
                {
                    b.HasOne("ViridianCode.ViridianSurvey.DataModel.UserAccount", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ViridianCode.ViridianSurvey.DataModel.Question", "ParentQuestion")
                        .WithMany()
                        .HasForeignKey("ParentQuestionId");

                    b.HasOne("ViridianCode.ViridianSurvey.DataModel.Survey", "Survey")
                        .WithMany("Questions")
                        .HasForeignKey("SurveyId");
                });

            modelBuilder.Entity("ViridianCode.ViridianSurvey.DataModel.Respondent", b =>
                {
                    b.HasOne("ViridianCode.ViridianSurvey.DataModel.UserAccount", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");
                });

            modelBuilder.Entity("ViridianCode.ViridianSurvey.DataModel.Survey", b =>
                {
                    b.HasOne("ViridianCode.ViridianSurvey.DataModel.UserAccount", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
